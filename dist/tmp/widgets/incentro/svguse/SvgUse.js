define(['exports', 'react'], (function (exports, react) { 'use strict';

    function SvgUse({
      buttonAction,
      svgColorVar,
      svgName,
      svgSize,
      ...rest
    }) {
      const id = rest.id || "";
      const style = rest.class || "";
      const widgetName = rest.name || "";
      const [canRender, setCanRender] = react.useState(false);

      function onClick() {
        if (buttonAction && buttonAction.canExecute) {
          buttonAction.execute();
        }
      }

      react.useEffect(() => {
        if (svgName) {
          setCanRender(true);
        }
      }, [svgName]);

      if (canRender) {
        const interactiveClass = buttonAction ? "svg-icon--interactive" : "";
        return react.createElement("div", {
          id: id,
          className: `svg-icon ${style} ${widgetName} ${interactiveClass}`,
          onClick: () => buttonAction && onClick(),
          style: {
            "--icon-size": `${svgSize}px`,
            "--icon-color": `${svgColorVar}`
          }
        }, react.createElement("svg", {
          role: "img",
          className: "svg-icon__svg",
          style: {
            fill: "var(--icon-color, black)"
          }
        }, react.createElement("use", {
          href: `#${svgName}`
        })));
      } else {
        return react.createElement("div", null);
      }
    }

    exports.SvgUse = SvgUse;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3ZnVXNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvU3ZnVXNlLmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuL3VpL1N2Z1VzZS5jc3NcIjtcbmltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFN2Z1VzZSh7IGJ1dHRvbkFjdGlvbiwgc3ZnQ29sb3JWYXIsIHN2Z05hbWUsIHN2Z1NpemUsIC4uLnJlc3QgfSkge1xuICAgIGNvbnN0IGlkID0gcmVzdC5pZCB8fCBcIlwiO1xuICAgIGNvbnN0IHN0eWxlID0gcmVzdC5jbGFzcyB8fCBcIlwiO1xuICAgIGNvbnN0IHdpZGdldE5hbWUgPSByZXN0Lm5hbWUgfHwgXCJcIjtcbiAgICBjb25zdCBbY2FuUmVuZGVyLCBzZXRDYW5SZW5kZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gICAgZnVuY3Rpb24gb25DbGljaygpIHtcbiAgICAgICAgaWYgKGJ1dHRvbkFjdGlvbiAmJiBidXR0b25BY3Rpb24uY2FuRXhlY3V0ZSkge1xuICAgICAgICAgICAgYnV0dG9uQWN0aW9uLmV4ZWN1dGUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChzdmdOYW1lKSB7XG4gICAgICAgICAgICBzZXRDYW5SZW5kZXIodHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9LCBbc3ZnTmFtZV0pO1xuXG4gICAgaWYgKGNhblJlbmRlcikge1xuICAgICAgICBjb25zdCBpbnRlcmFjdGl2ZUNsYXNzID0gYnV0dG9uQWN0aW9uID8gXCJzdmctaWNvbi0taW50ZXJhY3RpdmVcIiA6IFwiXCI7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgc3ZnLWljb24gJHtzdHlsZX0gJHt3aWRnZXROYW1lfSAke2ludGVyYWN0aXZlQ2xhc3N9YH1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBidXR0b25BY3Rpb24gJiYgb25DbGljaygpfVxuICAgICAgICAgICAgICAgIHN0eWxlPXt7IFwiLS1pY29uLXNpemVcIjogYCR7c3ZnU2l6ZX1weGAsIFwiLS1pY29uLWNvbG9yXCI6IGAke3N2Z0NvbG9yVmFyfWAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8c3ZnIHJvbGU9XCJpbWdcIiBjbGFzc05hbWU9XCJzdmctaWNvbl9fc3ZnXCIgc3R5bGU9e3sgZmlsbDogXCJ2YXIoLS1pY29uLWNvbG9yLCBibGFjaylcIiB9fT5cbiAgICAgICAgICAgICAgICAgICAgPHVzZSBocmVmPXtgIyR7c3ZnTmFtZX1gfT48L3VzZT5cbiAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiA8ZGl2PjwvZGl2PjtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiU3ZnVXNlIiwiYnV0dG9uQWN0aW9uIiwic3ZnQ29sb3JWYXIiLCJzdmdOYW1lIiwic3ZnU2l6ZSIsInJlc3QiLCJpZCIsInN0eWxlIiwiY2xhc3MiLCJ3aWRnZXROYW1lIiwibmFtZSIsImNhblJlbmRlciIsInNldENhblJlbmRlciIsInVzZVN0YXRlIiwib25DbGljayIsImNhbkV4ZWN1dGUiLCJleGVjdXRlIiwidXNlRWZmZWN0IiwiaW50ZXJhY3RpdmVDbGFzcyIsImNyZWF0ZUVsZW1lbnQiLCJmaWxsIl0sIm1hcHBpbmdzIjoiOztJQUdPLFNBQVNBLE1BQVQsQ0FBZ0I7TUFBRUMsWUFBRjtNQUFnQkMsV0FBaEI7TUFBNkJDLE9BQTdCO01BQXNDQyxPQUF0QztNQUErQyxHQUFHQyxJQUFBQTtJQUFsRCxDQUFoQixFQUEwRTtJQUM3RSxFQUFBLE1BQU1DLEVBQUUsR0FBR0QsSUFBSSxDQUFDQyxFQUFMLElBQVcsRUFBdEIsQ0FBQTtJQUNBLEVBQUEsTUFBTUMsS0FBSyxHQUFHRixJQUFJLENBQUNHLEtBQUwsSUFBYyxFQUE1QixDQUFBO0lBQ0EsRUFBQSxNQUFNQyxVQUFVLEdBQUdKLElBQUksQ0FBQ0ssSUFBTCxJQUFhLEVBQWhDLENBQUE7TUFDQSxNQUFNLENBQUNDLFNBQUQsRUFBWUMsWUFBWixJQUE0QkMsY0FBUSxDQUFDLEtBQUQsQ0FBMUMsQ0FBQTs7SUFFQSxFQUFBLFNBQVNDLE9BQVQsR0FBbUI7SUFDZixJQUFBLElBQUliLFlBQVksSUFBSUEsWUFBWSxDQUFDYyxVQUFqQyxFQUE2QztJQUN6Q2QsTUFBQUEsWUFBWSxDQUFDZSxPQUFiLEVBQUEsQ0FBQTtJQUNILEtBQUE7SUFDSixHQUFBOztJQUVEQyxFQUFBQSxlQUFTLENBQUMsTUFBTTtJQUNaLElBQUEsSUFBSWQsT0FBSixFQUFhO1VBQ1RTLFlBQVksQ0FBQyxJQUFELENBQVosQ0FBQTtJQUNILEtBQUE7SUFDSixHQUpRLEVBSU4sQ0FBQ1QsT0FBRCxDQUpNLENBQVQsQ0FBQTs7SUFNQSxFQUFBLElBQUlRLFNBQUosRUFBZTtJQUNYLElBQUEsTUFBTU8sZ0JBQWdCLEdBQUdqQixZQUFZLEdBQUcsdUJBQUgsR0FBNkIsRUFBbEUsQ0FBQTtRQUVBLE9BQ0lrQixtQkFBQSxDQUFBLEtBQUEsRUFBQTtJQUNJLE1BQUEsRUFBRSxFQUFFYixFQURSO0lBRUksTUFBQSxTQUFTLEVBQUcsQ0FBV0MsU0FBQUEsRUFBQUEsS0FBTSxJQUFHRSxVQUFXLENBQUEsQ0FBQSxFQUFHUyxnQkFBaUIsQ0FGbkUsQ0FBQTtJQUdJLE1BQUEsT0FBTyxFQUFFLE1BQU1qQixZQUFZLElBQUlhLE9BQU8sRUFIMUM7SUFJSSxNQUFBLEtBQUssRUFBRTtZQUFFLGFBQWdCLEVBQUEsQ0FBQSxFQUFFVixPQUFRLENBQTVCLEVBQUEsQ0FBQTtJQUFpQyxRQUFBLGNBQUEsRUFBaUIsR0FBRUYsV0FBWSxDQUFBLENBQUE7SUFBaEUsT0FBQTtTQUVQLEVBQUFpQixtQkFBQSxDQUFBLEtBQUEsRUFBQTtJQUFLLE1BQUEsSUFBSSxFQUFDLEtBQVY7SUFBZ0IsTUFBQSxTQUFTLEVBQUMsZUFBMUI7SUFBMEMsTUFBQSxLQUFLLEVBQUU7SUFBRUMsUUFBQUEsSUFBSSxFQUFFLDBCQUFBO0lBQVIsT0FBQTtTQUM3QyxFQUFBRCxtQkFBQSxDQUFBLEtBQUEsRUFBQTtVQUFLLElBQUksRUFBRyxJQUFHaEIsT0FBUSxDQUFBLENBQUE7SUFBdkIsS0FBQSxDQURKLENBTkosQ0FESixDQUFBO0lBWUgsR0FmRCxNQWVPO0lBQ0gsSUFBQSxPQUFPZ0IsbUJBQVAsQ0FBQSxLQUFBLEVBQUEsSUFBQSxDQUFBLENBQUE7SUFDSCxHQUFBO0lBQ0o7Ozs7Ozs7Ozs7In0=
