define(['exports', 'react'], (function (exports, react) { 'use strict';

    function SvgUse({
      buttonAction,
      svgColorVar,
      svgName,
      svgSize,
      ...rest
    }) {
      const id = rest.id || "";
      const style = rest.class || "";
      const widgetName = rest.name || "";
      const [canRender, setCanRender] = react.useState(false);

      function onClick() {
        if (buttonAction && buttonAction.canExecute) {
          buttonAction.execute();
        }
      }

      react.useEffect(() => {
        if (svgName) {
          setCanRender(true);
        }
      }, [svgName]);

      if (canRender && (buttonAction ? buttonAction.isAuthorized : null)) {
        const interactiveClass = buttonAction ? "svg-icon--interactive" : "";
        return react.createElement("div", {
          id: id,
          className: `svg-icon ${style} ${widgetName} ${interactiveClass}`,
          onClick: () => buttonAction && onClick(),
          style: {
            "--icon-size": `${svgSize}px`,
            "--icon-color": `${svgColorVar}`
          }
        }, react.createElement("svg", {
          role: "img",
          className: "svg-icon__svg",
          style: {
            fill: "var(--icon-color, black)"
          }
        }, react.createElement("use", {
          href: `#${svgName}`
        })));
      } else {
        return null;
      }
    }

    exports.SvgUse = SvgUse;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3ZnVXNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvU3ZnVXNlLmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuL3VpL1N2Z1VzZS5jc3NcIjtcbmltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFN2Z1VzZSh7IGJ1dHRvbkFjdGlvbiwgc3ZnQ29sb3JWYXIsIHN2Z05hbWUsIHN2Z1NpemUsIC4uLnJlc3QgfSkge1xuICAgIGNvbnN0IGlkID0gcmVzdC5pZCB8fCBcIlwiO1xuICAgIGNvbnN0IHN0eWxlID0gcmVzdC5jbGFzcyB8fCBcIlwiO1xuICAgIGNvbnN0IHdpZGdldE5hbWUgPSByZXN0Lm5hbWUgfHwgXCJcIjtcbiAgICBjb25zdCBbY2FuUmVuZGVyLCBzZXRDYW5SZW5kZXJdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gICAgZnVuY3Rpb24gb25DbGljaygpIHtcbiAgICAgICAgaWYgKGJ1dHRvbkFjdGlvbiAmJiBidXR0b25BY3Rpb24uY2FuRXhlY3V0ZSkge1xuICAgICAgICAgICAgYnV0dG9uQWN0aW9uLmV4ZWN1dGUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChzdmdOYW1lKSB7XG4gICAgICAgICAgICBzZXRDYW5SZW5kZXIodHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9LCBbc3ZnTmFtZV0pO1xuXG4gICAgaWYgKGNhblJlbmRlciAmJiAoYnV0dG9uQWN0aW9uID8gYnV0dG9uQWN0aW9uLmlzQXV0aG9yaXplZCA6IG51bGwpKSB7XG4gICAgICAgIGNvbnN0IGludGVyYWN0aXZlQ2xhc3MgPSBidXR0b25BY3Rpb24gPyBcInN2Zy1pY29uLS1pbnRlcmFjdGl2ZVwiIDogXCJcIjtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BzdmctaWNvbiAke3N0eWxlfSAke3dpZGdldE5hbWV9ICR7aW50ZXJhY3RpdmVDbGFzc31gfVxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGJ1dHRvbkFjdGlvbiAmJiBvbkNsaWNrKCl9XG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgXCItLWljb24tc2l6ZVwiOiBgJHtzdmdTaXplfXB4YCwgXCItLWljb24tY29sb3JcIjogYCR7c3ZnQ29sb3JWYXJ9YCB9fVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxzdmcgcm9sZT1cImltZ1wiIGNsYXNzTmFtZT1cInN2Zy1pY29uX19zdmdcIiBzdHlsZT17eyBmaWxsOiBcInZhcigtLWljb24tY29sb3IsIGJsYWNrKVwiIH19PlxuICAgICAgICAgICAgICAgICAgICA8dXNlIGhyZWY9e2AjJHtzdmdOYW1lfWB9PjwvdXNlPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIlN2Z1VzZSIsImJ1dHRvbkFjdGlvbiIsInN2Z0NvbG9yVmFyIiwic3ZnTmFtZSIsInN2Z1NpemUiLCJyZXN0IiwiaWQiLCJzdHlsZSIsImNsYXNzIiwid2lkZ2V0TmFtZSIsIm5hbWUiLCJjYW5SZW5kZXIiLCJzZXRDYW5SZW5kZXIiLCJ1c2VTdGF0ZSIsIm9uQ2xpY2siLCJjYW5FeGVjdXRlIiwiZXhlY3V0ZSIsInVzZUVmZmVjdCIsImlzQXV0aG9yaXplZCIsImludGVyYWN0aXZlQ2xhc3MiLCJjcmVhdGVFbGVtZW50IiwiZmlsbCJdLCJtYXBwaW5ncyI6Ijs7SUFHTyxTQUFTQSxNQUFULENBQWdCO01BQUVDLFlBQUY7TUFBZ0JDLFdBQWhCO01BQTZCQyxPQUE3QjtNQUFzQ0MsT0FBdEM7TUFBK0MsR0FBR0MsSUFBQUE7SUFBbEQsQ0FBaEIsRUFBMEU7SUFDN0UsRUFBQSxNQUFNQyxFQUFFLEdBQUdELElBQUksQ0FBQ0MsRUFBTCxJQUFXLEVBQXRCLENBQUE7SUFDQSxFQUFBLE1BQU1DLEtBQUssR0FBR0YsSUFBSSxDQUFDRyxLQUFMLElBQWMsRUFBNUIsQ0FBQTtJQUNBLEVBQUEsTUFBTUMsVUFBVSxHQUFHSixJQUFJLENBQUNLLElBQUwsSUFBYSxFQUFoQyxDQUFBO01BQ0EsTUFBTSxDQUFDQyxTQUFELEVBQVlDLFlBQVosSUFBNEJDLGNBQVEsQ0FBQyxLQUFELENBQTFDLENBQUE7O0lBRUEsRUFBQSxTQUFTQyxPQUFULEdBQW1CO0lBQ2YsSUFBQSxJQUFJYixZQUFZLElBQUlBLFlBQVksQ0FBQ2MsVUFBakMsRUFBNkM7SUFDekNkLE1BQUFBLFlBQVksQ0FBQ2UsT0FBYixFQUFBLENBQUE7SUFDSCxLQUFBO0lBQ0osR0FBQTs7SUFFREMsRUFBQUEsZUFBUyxDQUFDLE1BQU07SUFDWixJQUFBLElBQUlkLE9BQUosRUFBYTtVQUNUUyxZQUFZLENBQUMsSUFBRCxDQUFaLENBQUE7SUFDSCxLQUFBO0lBQ0osR0FKUSxFQUlOLENBQUNULE9BQUQsQ0FKTSxDQUFULENBQUE7O01BTUEsSUFBSVEsU0FBUyxLQUFLVixZQUFZLEdBQUdBLFlBQVksQ0FBQ2lCLFlBQWhCLEdBQStCLElBQWhELENBQWIsRUFBb0U7SUFDaEUsSUFBQSxNQUFNQyxnQkFBZ0IsR0FBR2xCLFlBQVksR0FBRyx1QkFBSCxHQUE2QixFQUFsRSxDQUFBO1FBRUEsT0FDSW1CLG1CQUFBLENBQUEsS0FBQSxFQUFBO0lBQ0ksTUFBQSxFQUFFLEVBQUVkLEVBRFI7SUFFSSxNQUFBLFNBQVMsRUFBRyxDQUFXQyxTQUFBQSxFQUFBQSxLQUFNLElBQUdFLFVBQVcsQ0FBQSxDQUFBLEVBQUdVLGdCQUFpQixDQUZuRSxDQUFBO0lBR0ksTUFBQSxPQUFPLEVBQUUsTUFBTWxCLFlBQVksSUFBSWEsT0FBTyxFQUgxQztJQUlJLE1BQUEsS0FBSyxFQUFFO1lBQUUsYUFBZ0IsRUFBQSxDQUFBLEVBQUVWLE9BQVEsQ0FBNUIsRUFBQSxDQUFBO0lBQWlDLFFBQUEsY0FBQSxFQUFpQixHQUFFRixXQUFZLENBQUEsQ0FBQTtJQUFoRSxPQUFBO1NBRVAsRUFBQWtCLG1CQUFBLENBQUEsS0FBQSxFQUFBO0lBQUssTUFBQSxJQUFJLEVBQUMsS0FBVjtJQUFnQixNQUFBLFNBQVMsRUFBQyxlQUExQjtJQUEwQyxNQUFBLEtBQUssRUFBRTtJQUFFQyxRQUFBQSxJQUFJLEVBQUUsMEJBQUE7SUFBUixPQUFBO1NBQzdDLEVBQUFELG1CQUFBLENBQUEsS0FBQSxFQUFBO1VBQUssSUFBSSxFQUFHLElBQUdqQixPQUFRLENBQUEsQ0FBQTtJQUF2QixLQUFBLENBREosQ0FOSixDQURKLENBQUE7SUFZSCxHQWZELE1BZU87SUFDSCxJQUFBLE9BQU8sSUFBUCxDQUFBO0lBQ0gsR0FBQTtJQUNKOzs7Ozs7Ozs7OyJ9
